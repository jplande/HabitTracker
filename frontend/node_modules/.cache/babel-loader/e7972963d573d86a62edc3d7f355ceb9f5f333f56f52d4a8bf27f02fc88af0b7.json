{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\n\n// Types pour les habitudes\n\nclass HabitService {\n  constructor() {\n    this.api = void 0;\n    this.api = axios.create({\n      baseURL: API_BASE_URL,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    // Intercepteur pour ajouter le token d'authentification\n    this.api.interceptors.request.use(config => {\n      const token = localStorage.getItem('accessToken');\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    }, error => Promise.reject(error));\n  }\n  async getHabits(params) {\n    try {\n      const response = await this.api.get('/habits', {\n        params\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Erreur lors de la r√©cup√©ration des habitudes');\n    }\n  }\n  async getHabitById(id) {\n    try {\n      const response = await this.api.get(`/habits/${id}`);\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Habitude non trouv√©e');\n    }\n  }\n  async createHabit(habitData) {\n    try {\n      const response = await this.api.post('/habits', habitData);\n      return response.data;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Erreur lors de la cr√©ation de l\\'habitude');\n    }\n  }\n  async updateHabit(id, habitData) {\n    try {\n      const response = await this.api.put(`/habits/${id}`, habitData);\n      return response.data;\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      throw new Error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Erreur lors de la mise √† jour de l\\'habitude');\n    }\n  }\n  async deleteHabit(id) {\n    try {\n      await this.api.delete(`/habits/${id}`);\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      throw new Error(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Erreur lors de la suppression de l\\'habitude');\n    }\n  }\n  async toggleHabitStatus(id) {\n    try {\n      const response = await this.api.patch(`/habits/${id}/toggle`);\n      return response.data;\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      throw new Error(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Erreur lors du changement de statut');\n    }\n  }\n  async getHabitCategories() {\n    try {\n      const response = await this.api.get('/habits/categories');\n      return response.data;\n    } catch (error) {\n      throw new Error('Erreur lors de la r√©cup√©ration des cat√©gories');\n    }\n  }\n  async getHabitFrequencies() {\n    try {\n      const response = await this.api.get('/habits/frequencies');\n      return response.data;\n    } catch (error) {\n      throw new Error('Erreur lors de la r√©cup√©ration des fr√©quences');\n    }\n  }\n\n  // M√©thodes utilitaires pour le frontend\n  getCategoryIcon(category) {\n    const icons = {\n      SPORT: 'üèÉ‚Äç‚ôÇÔ∏è',\n      SANTE: 'üè•',\n      EDUCATION: 'üìö',\n      TRAVAIL: 'üíº',\n      LIFESTYLE: 'üå±',\n      SOCIAL: 'üë•',\n      CREATIVITE: 'üé®',\n      FINANCE: 'üí∞',\n      AUTRE: 'üìå'\n    };\n    return icons[category] || 'üìå';\n  }\n  getCategoryLabel(category) {\n    const labels = {\n      SPORT: 'Sport',\n      SANTE: 'Sant√©',\n      EDUCATION: '√âducation',\n      TRAVAIL: 'Travail',\n      LIFESTYLE: 'Style de vie',\n      SOCIAL: 'Social',\n      CREATIVITE: 'Cr√©ativit√©',\n      FINANCE: 'Finance',\n      AUTRE: 'Autre'\n    };\n    return labels[category] || 'Autre';\n  }\n  getFrequencyLabel(frequency) {\n    const labels = {\n      DAILY: 'Quotidien',\n      WEEKLY: 'Hebdomadaire',\n      MONTHLY: 'Mensuel'\n    };\n    return labels[frequency] || 'Quotidien';\n  }\n}\nexport const habitService = new HabitService();","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","HabitService","constructor","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","getHabits","params","response","get","data","_error$response","_error$response$data","Error","message","getHabitById","id","_error$response2","_error$response2$data","createHabit","habitData","post","_error$response3","_error$response3$data","updateHabit","put","_error$response4","_error$response4$data","deleteHabit","delete","_error$response5","_error$response5$data","toggleHabitStatus","patch","_error$response6","_error$response6$data","getHabitCategories","getHabitFrequencies","getCategoryIcon","category","icons","SPORT","SANTE","EDUCATION","TRAVAIL","LIFESTYLE","SOCIAL","CREATIVITE","FINANCE","AUTRE","getCategoryLabel","labels","getFrequencyLabel","frequency","DAILY","WEEKLY","MONTHLY","habitService"],"sources":["/home/iamyanissa/jp/HabitTracker/frontend/src/services/habitService.ts"],"sourcesContent":["import axios, { AxiosInstance } from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\n\n// Types pour les habitudes\nexport interface Habit {\n    id: number;\n    userId: number;\n    title: string;\n    description?: string;\n    category: HabitCategory;\n    unit: string;\n    frequency: HabitFrequency;\n    targetValue?: number;\n    isActive: boolean;\n    createdAt: string;\n    totalProgress?: number;\n    currentStreak?: number;\n    averageCompletion?: number;\n    lastProgressDate?: string;\n}\n\nexport type HabitCategory =\n    | 'SPORT'\n    | 'SANTE'\n    | 'EDUCATION'\n    | 'TRAVAIL'\n    | 'LIFESTYLE'\n    | 'SOCIAL'\n    | 'CREATIVITE'\n    | 'FINANCE'\n    | 'AUTRE';\n\nexport type HabitFrequency = 'DAILY' | 'WEEKLY' | 'MONTHLY';\n\nexport interface CreateHabitRequest {\n    title: string;\n    description?: string;\n    category: HabitCategory;\n    unit: string;\n    frequency: HabitFrequency;\n    targetValue?: number;\n}\n\nexport interface UpdateHabitRequest {\n    title?: string;\n    description?: string;\n    category?: HabitCategory;\n    unit?: string;\n    frequency?: HabitFrequency;\n    targetValue?: number;\n    isActive?: boolean;\n}\n\nexport interface PaginatedResponse<T> {\n    content: T[];\n    pageable: {\n        pageNumber: number;\n        pageSize: number;\n    };\n    totalElements: number;\n    totalPages: number;\n    last: boolean;\n    first: boolean;\n}\n\nclass HabitService {\n    private api: AxiosInstance;\n\n    constructor() {\n        this.api = axios.create({\n            baseURL: API_BASE_URL,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n\n        // Intercepteur pour ajouter le token d'authentification\n        this.api.interceptors.request.use(\n            (config) => {\n                const token = localStorage.getItem('accessToken');\n                if (token) {\n                    config.headers.Authorization = `Bearer ${token}`;\n                }\n                return config;\n            },\n            (error) => Promise.reject(error)\n        );\n    }\n\n    async getHabits(params?: {\n        page?: number;\n        size?: number;\n        search?: string;\n        category?: HabitCategory;\n        active?: boolean;\n    }): Promise<PaginatedResponse<Habit>> {\n        try {\n            const response = await this.api.get('/habits', { params });\n            return response.data;\n        } catch (error: any) {\n            throw new Error(error.response?.data?.message || 'Erreur lors de la r√©cup√©ration des habitudes');\n        }\n    }\n\n    async getHabitById(id: number): Promise<Habit> {\n        try {\n            const response = await this.api.get(`/habits/${id}`);\n            return response.data;\n        } catch (error: any) {\n            throw new Error(error.response?.data?.message || 'Habitude non trouv√©e');\n        }\n    }\n\n    async createHabit(habitData: CreateHabitRequest): Promise<Habit> {\n        try {\n            const response = await this.api.post('/habits', habitData);\n            return response.data;\n        } catch (error: any) {\n            throw new Error(error.response?.data?.message || 'Erreur lors de la cr√©ation de l\\'habitude');\n        }\n    }\n\n    async updateHabit(id: number, habitData: UpdateHabitRequest): Promise<Habit> {\n        try {\n            const response = await this.api.put(`/habits/${id}`, habitData);\n            return response.data;\n        } catch (error: any) {\n            throw new Error(error.response?.data?.message || 'Erreur lors de la mise √† jour de l\\'habitude');\n        }\n    }\n\n    async deleteHabit(id: number): Promise<void> {\n        try {\n            await this.api.delete(`/habits/${id}`);\n        } catch (error: any) {\n            throw new Error(error.response?.data?.message || 'Erreur lors de la suppression de l\\'habitude');\n        }\n    }\n\n    async toggleHabitStatus(id: number): Promise<Habit> {\n        try {\n            const response = await this.api.patch(`/habits/${id}/toggle`);\n            return response.data;\n        } catch (error: any) {\n            throw new Error(error.response?.data?.message || 'Erreur lors du changement de statut');\n        }\n    }\n\n    async getHabitCategories(): Promise<HabitCategory[]> {\n        try {\n            const response = await this.api.get('/habits/categories');\n            return response.data;\n        } catch (error: any) {\n            throw new Error('Erreur lors de la r√©cup√©ration des cat√©gories');\n        }\n    }\n\n    async getHabitFrequencies(): Promise<HabitFrequency[]> {\n        try {\n            const response = await this.api.get('/habits/frequencies');\n            return response.data;\n        } catch (error: any) {\n            throw new Error('Erreur lors de la r√©cup√©ration des fr√©quences');\n        }\n    }\n\n    // M√©thodes utilitaires pour le frontend\n    getCategoryIcon(category: HabitCategory): string {\n        const icons: Record<HabitCategory, string> = {\n            SPORT: 'üèÉ‚Äç‚ôÇÔ∏è',\n            SANTE: 'üè•',\n            EDUCATION: 'üìö',\n            TRAVAIL: 'üíº',\n            LIFESTYLE: 'üå±',\n            SOCIAL: 'üë•',\n            CREATIVITE: 'üé®',\n            FINANCE: 'üí∞',\n            AUTRE: 'üìå',\n        };\n        return icons[category] || 'üìå';\n    }\n\n    getCategoryLabel(category: HabitCategory): string {\n        const labels: Record<HabitCategory, string> = {\n            SPORT: 'Sport',\n            SANTE: 'Sant√©',\n            EDUCATION: '√âducation',\n            TRAVAIL: 'Travail',\n            LIFESTYLE: 'Style de vie',\n            SOCIAL: 'Social',\n            CREATIVITE: 'Cr√©ativit√©',\n            FINANCE: 'Finance',\n            AUTRE: 'Autre',\n        };\n        return labels[category] || 'Autre';\n    }\n\n    getFrequencyLabel(frequency: HabitFrequency): string {\n        const labels: Record<HabitFrequency, string> = {\n            DAILY: 'Quotidien',\n            WEEKLY: 'Hebdomadaire',\n            MONTHLY: 'Mensuel',\n        };\n        return labels[frequency] || 'Quotidien';\n    }\n}\n\nexport const habitService = new HabitService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}